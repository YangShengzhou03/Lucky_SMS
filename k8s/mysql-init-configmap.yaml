# 存储MySQL初始化脚本
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-scripts
data:
  # 完整的数据库初始化脚本
  init.sql: |
    -- 1. 统一会话字符集和排序规则，避免比较操作冲突
    SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci;

    -- 2. 强制 SQL 执行错误时中断，暴露问题
    SET SQL_MODE = 'STRICT_ALL_TABLES';
    -- 3. 关闭外键检查，避免建表顺序导致的外键失败
    SET FOREIGN_KEY_CHECKS = 0;

    -- 删除现有数据库并重新创建
    DROP DATABASE IF EXISTS Lucky_SMS;
    CREATE DATABASE Lucky_SMS CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    USE Lucky_SMS;

    /*
    第一阶段：基础字典表（无外键依赖）
    */

    -- 用户表：存储系统所有用户的基础信息（先创建基础表，自引用外键稍后添加）
    CREATE TABLE users (
        user_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '用户ID（主键）',
        username VARCHAR(50) NOT NULL COMMENT '用户名',
        password_hash VARCHAR(255) COMMENT '加密后的密码',
        email VARCHAR(100) UNIQUE COMMENT '电子邮箱',
        phone VARCHAR(20) UNIQUE NOT NULL COMMENT '手机号码',
        gender ENUM('M', 'F', 'O') DEFAULT 'O' COMMENT '性别（M-男，F-女，O-其他）',
        birth_date DATE COMMENT '出生日期',
        avatar_url VARCHAR(255) COMMENT '头像URL',
        external_id VARCHAR(50) UNIQUE COMMENT '外部系统ID',
        status ENUM('ACTIVE', 'INACTIVE') DEFAULT 'ACTIVE' COMMENT '用户状态',
        last_login_time TIMESTAMP NULL COMMENT '最后登录时间',
        last_login_ip VARCHAR(50) COMMENT '最后登录IP',
        last_password_change_time TIMESTAMP NULL COMMENT '密码最后修改时间',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        created_by INT COMMENT '创建人ID',
        updated_by INT COMMENT '更新人ID',
        INDEX idx_username (username),
        INDEX idx_email (email),
        INDEX idx_phone (phone),
        INDEX idx_status (status),
        CONSTRAINT chk_birth_date CHECK (birth_date IS NULL OR birth_date >= '1900-01-01')
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '用户表-存储用户的基础信息';

    -- 角色表：定义系统中的不同角色
    CREATE TABLE roles (
        role_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '角色ID（主键）',
        role_name VARCHAR(50) UNIQUE NOT NULL COMMENT '角色名称（全局唯一）',
        description VARCHAR(255) COMMENT '角色描述',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_role_name (role_name)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '角色表-定义系统中的不同角色及权限范围';

    -- 权限表：定义系统中的各种操作权限
    CREATE TABLE permissions (
        permission_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '权限ID（主键）',
        permission_name VARCHAR(50) UNIQUE NOT NULL COMMENT '权限名称（全局唯一）',
        description VARCHAR(255) COMMENT '权限描述',
        module VARCHAR(50) NOT NULL COMMENT '所属功能模块',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_permission_name (permission_name),
        INDEX idx_module (module)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '权限表-定义系统操作权限';

    -- 学生状态表
    CREATE TABLE student_statuses (
        status_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '状态ID（主键）',
        status_name VARCHAR(50) UNIQUE NOT NULL COMMENT '状态名称（全局唯一）',
        description VARCHAR(255) COMMENT '状态描述',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_status_name (status_name)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '学生状态表-定义学生状态（在读、毕业、休学等）';

    -- 教师状态表
    CREATE TABLE teacher_statuses (
        status_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '状态ID（主键）',
        status_name VARCHAR(50) UNIQUE NOT NULL COMMENT '状态名称（全局唯一）',
        description VARCHAR(255) COMMENT '状态描述',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_status_name (status_name)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '教师状态表-定义教师状态（在职、休假、退休等）';

    -- 职称表
    CREATE TABLE teacher_titles (
        title_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '职称ID（主键）',
        title_name VARCHAR(50) UNIQUE NOT NULL COMMENT '职称名称（全局唯一）',
        title_level TINYINT NOT NULL COMMENT '职称级别（1-初级，2-中级，3-高级）',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_title_name (title_name),
        INDEX idx_title_level (title_level),
        CONSTRAINT chk_title_level CHECK (title_level IN (1, 2, 3))
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '教师职称表-定义教师职称及级别';

    -- 成绩审核状态表
    CREATE TABLE grade_review_statuses (
        status_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '状态ID（主键）',
        status_name VARCHAR(50) UNIQUE NOT NULL COMMENT '状态名称（全局唯一）',
        description VARCHAR(255) COMMENT '状态描述',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_status_name (status_name)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '成绩审核状态表-定义成绩审核状态（待审核、已通过、已拒绝）';

    -- 图书借阅状态表
    CREATE TABLE book_borrow_statuses (
        status_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '状态ID（主键）',
        status_name VARCHAR(50) UNIQUE NOT NULL COMMENT '状态名称（全局唯一）',
        description VARCHAR(255) COMMENT '状态描述',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_status_name (status_name)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '图书借阅状态表-定义图书借阅状态（已借出、已归还、已逾期等）';

    -- 图书分类表（级联操作）
    CREATE TABLE book_categories (
        category_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID（主键）',
        category_name VARCHAR(50) UNIQUE NOT NULL COMMENT '分类名称（全局唯一）',
        parent_id INT COMMENT '父分类ID（外键），NULL表示顶级分类',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (parent_id) REFERENCES book_categories(category_id) ON DELETE SET NULL ON UPDATE CASCADE,
        INDEX idx_parent_id (parent_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '图书分类表-定义图书分类层级结构';

    /*
    第二阶段：基础业务表（依赖基础字典表）
    */

    -- 学院表（先创建基础表，院长外键稍后添加）
    CREATE TABLE departments (
        department_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '学院ID（主键）',
        department_name VARCHAR(50) UNIQUE NOT NULL COMMENT '学院名称（全局唯一）',
        department_code VARCHAR(10) UNIQUE NOT NULL COMMENT '学院代码（全局唯一）',
        dean_id INT COMMENT '院长ID（外键，关联教师表）',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_department_code (department_code)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '学院表-定义学校学院及负责人';

    -- 专业表（级联操作）
    CREATE TABLE majors (
        major_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '专业ID（主键）',
        major_name VARCHAR(50) NOT NULL COMMENT '专业名称',
        department_id INT NOT NULL COMMENT '所属学院ID（外键）',
        major_code VARCHAR(10) UNIQUE NOT NULL COMMENT '专业代码（全局唯一）',
        required_credits DECIMAL(5,2) NOT NULL DEFAULT 0.00 COMMENT '应修学分',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE CASCADE ON UPDATE CASCADE,
        INDEX idx_major_code (major_code),
        INDEX idx_department_id (department_id),
        CONSTRAINT chk_required_credits CHECK (required_credits >= 0)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '专业表-定义学院下的专业';

    -- 班级表（级联操作，班主任外键稍后添加）
    CREATE TABLE class_info (
        class_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '班级ID（主键）',
        class_name VARCHAR(50) UNIQUE NOT NULL COMMENT '班级名称（全局唯一）',
        major_id INT NOT NULL COMMENT '所属专业ID（外键）',
        enrollment_year YEAR NOT NULL COMMENT '入学年份',
        class_advisor_id INT COMMENT '班主任ID（外键，关联教师表）',
        classroom VARCHAR(50) COMMENT '固定教室',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (major_id) REFERENCES majors(major_id) ON DELETE CASCADE ON UPDATE CASCADE,
        INDEX idx_class_name (class_name),
        INDEX idx_major_id (major_id),
        INDEX idx_enrollment_year (enrollment_year),
        CONSTRAINT chk_enrollment_year CHECK (enrollment_year >= 2000)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '班级表-定义专业下的班级信息';

    -- 用户角色关联表
    CREATE TABLE user_roles (
        user_id INT NOT NULL COMMENT '用户ID（外键）',
        role_id INT NOT NULL COMMENT '角色ID（外键）',
        assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '分配时间',
        assigned_by INT COMMENT '分配人ID（外键）',
        PRIMARY KEY (user_id, role_id),
        FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (role_id) REFERENCES roles(role_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (assigned_by) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        INDEX idx_user_id (user_id),
        INDEX idx_role_id (role_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '用户角色关联表-记录用户与角色的对应关系';

    -- 角色权限关联表
    CREATE TABLE role_permissions (
        role_id INT NOT NULL COMMENT '角色ID（外键）',
        permission_id INT NOT NULL COMMENT '权限ID（外键）',
        assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '分配时间',
        assigned_by INT COMMENT '分配人ID（外键）',
        PRIMARY KEY (role_id, permission_id),
        FOREIGN KEY (role_id) REFERENCES roles(role_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (permission_id) REFERENCES permissions(permission_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (assigned_by) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        INDEX idx_role_id (role_id),
        INDEX idx_permission_id (permission_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '角色权限关联表-记录角色与权限的对应关系';

    -- 教师表（修正外键引用）
    CREATE TABLE teachers (
        teacher_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '教师ID（主键）',
        user_id INT UNIQUE NOT NULL COMMENT '用户ID（外键）',
        department_id INT NOT NULL COMMENT '学院ID（外键）',
        title_id INT NOT NULL COMMENT '职称ID（外键）',
        hire_date DATE NOT NULL COMMENT '入职日期',
        office_location VARCHAR(50) COMMENT '办公室位置',
        teacher_no VARCHAR(20) UNIQUE NOT NULL COMMENT '教师编号（全局唯一）',
        status_id INT NOT NULL DEFAULT 1 COMMENT '教师状态（外键）',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        created_by INT COMMENT '创建人ID',
        updated_by INT COMMENT '更新人ID',
        FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (title_id) REFERENCES teacher_titles(title_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (status_id) REFERENCES teacher_statuses(status_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (created_by) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        FOREIGN KEY (updated_by) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        INDEX idx_teacher_no (teacher_no),
        INDEX idx_department_id (department_id),
        INDEX idx_status_id (status_id),
        INDEX idx_teachers_department_status (department_id, status_id),
        CONSTRAINT chk_hire_date CHECK (hire_date >= '2000-01-01')
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '教师表-存储教师详细信息';

    -- 修正院长外键引用（在teachers表创建后）
    ALTER TABLE departments
        ADD CONSTRAINT fk_departments_dean
            FOREIGN KEY (dean_id) REFERENCES teachers(teacher_id) ON UPDATE SET NULL ON DELETE SET NULL;

    -- 修正班级表的班主任外键（在teachers表创建后）
    ALTER TABLE class_info
        ADD CONSTRAINT fk_class_advisor
            FOREIGN KEY (class_advisor_id) REFERENCES teachers(teacher_id) ON UPDATE SET NULL ON DELETE SET NULL;

    -- 学生表
    CREATE TABLE students (
        student_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '学生ID（主键）',
        user_id INT UNIQUE NOT NULL COMMENT '用户ID（外键）',
        department_id INT NOT NULL COMMENT '学院ID（外键）',
        major_id INT NOT NULL COMMENT '专业ID（外键）',
        class_id INT NOT NULL COMMENT '班级ID（外键）',
        enrollment_date DATE NOT NULL COMMENT '入学日期',
        education_years TINYINT UNSIGNED NOT NULL DEFAULT 4 COMMENT '学制（年）',
        student_no VARCHAR(20) UNIQUE NOT NULL COMMENT '学号（全局唯一）',
        status_id INT NOT NULL DEFAULT 1 COMMENT '学生状态（外键）',
        emergency_contact VARCHAR(50) COMMENT '紧急联系人姓名',
        emergency_phone VARCHAR(20) COMMENT '紧急联系人电话',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        created_by INT COMMENT '创建人ID',
        updated_by INT COMMENT '更新人ID',
        FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (major_id) REFERENCES majors(major_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (class_id) REFERENCES class_info(class_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (status_id) REFERENCES student_statuses(status_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (created_by) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        FOREIGN KEY (updated_by) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        INDEX idx_student_no (student_no),
        INDEX idx_enrollment_date (enrollment_date),
        INDEX idx_class_id (class_id),
        INDEX idx_status_id (status_id),
        INDEX idx_students_class_status (class_id, status_id),
        CONSTRAINT chk_education_years CHECK (education_years BETWEEN 1 AND 8),
        CONSTRAINT chk_enrollment_date CHECK (enrollment_date >= '2000-01-01')
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '学生表-存储学生详细信息';

    -- 课程表
    CREATE TABLE courses (
        course_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '课程ID（主键）',
        course_code VARCHAR(20) UNIQUE NOT NULL COMMENT '课程代码（全局唯一）',
        course_name VARCHAR(100) NOT NULL COMMENT '课程名称',
        course_description TEXT COMMENT '课程描述',
        department_id INT NOT NULL COMMENT '所属学院ID（外键）',
        credit DECIMAL(4,1) NOT NULL COMMENT '学分（必须大于0）',
        course_hours SMALLINT UNSIGNED NOT NULL COMMENT '课时（必须大于0）',
        course_type ENUM('COMPULSORY', 'ELECTIVE') NOT NULL COMMENT '课程类型（必修/选修）',
        exam_type ENUM('CLOSED_BOOK', 'OPEN_BOOK', 'REPORT', 'PRACTICAL') NOT NULL COMMENT '考试类型',
        created_by INT NOT NULL COMMENT '创建人ID（外键）',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (created_by) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
        INDEX idx_course_name (course_name),
        INDEX idx_department_id (department_id),
        INDEX idx_course_type (course_type),
        CONSTRAINT chk_credit CHECK (credit > 0),
        CONSTRAINT chk_course_hours CHECK (course_hours > 0)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '课程表-存储课程基本信息';

    -- 学期表
    CREATE TABLE semesters (
        semester_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '学期ID（主键）',
        academic_year VARCHAR(9) NOT NULL COMMENT '学年（如2024-2025）',
        semester_name VARCHAR(20) NOT NULL COMMENT '学期名称',
        start_date DATE NOT NULL COMMENT '开始日期',
        end_date DATE NOT NULL COMMENT '结束日期',
        course_selection_start DATE NOT NULL COMMENT '选课开始日期',
        course_selection_end DATE NOT NULL COMMENT '选课结束日期',
        grade_entry_start DATE NOT NULL COMMENT '成绩录入开始日期',
        grade_entry_end DATE NOT NULL COMMENT '成绩录入结束日期',
        is_current TINYINT(1) DEFAULT 0 COMMENT '是否当前学期（0-否，1-是）',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        INDEX idx_academic_year (academic_year),
        INDEX idx_is_current (is_current),
        INDEX idx_dates (start_date, end_date),
        CONSTRAINT chk_end_date CHECK (end_date > start_date),
        CONSTRAINT chk_selection_dates CHECK (course_selection_end > course_selection_start),
        CONSTRAINT chk_grade_dates CHECK (grade_entry_end > grade_entry_start),
        CONSTRAINT chk_is_current CHECK (is_current IN (0, 1))
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '学期表-定义学期信息及时间窗口';

    -- 教师授课表
    CREATE TABLE teaching_assignments (
        assignment_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '授课ID（主键）',
        teacher_id INT NOT NULL COMMENT '教师ID（外键）',
        course_id INT NOT NULL COMMENT '课程ID（外键）',
        semester_id INT NOT NULL COMMENT '学期ID（外键）',
        classroom VARCHAR(50) COMMENT '教室',
        schedule_info JSON COMMENT '上课时间安排（JSON格式存储详细时间）',
        max_students INT NOT NULL DEFAULT 50 COMMENT '最大学生数',
        current_students INT NOT NULL DEFAULT 0 COMMENT '当前学生数',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (teacher_id) REFERENCES teachers(teacher_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (course_id) REFERENCES courses(course_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (semester_id) REFERENCES semesters(semester_id) ON DELETE CASCADE ON UPDATE CASCADE,
        UNIQUE KEY uk_teacher_course_semester (teacher_id, course_id, semester_id),
        INDEX idx_teacher_course (teacher_id, course_id),
        INDEX idx_semester_course (semester_id, course_id),
        INDEX idx_teacher_semester (teacher_id, semester_id),
        CONSTRAINT chk_max_students CHECK (max_students > 0),
        CONSTRAINT chk_current_students CHECK (current_students >= 0),
        CONSTRAINT chk_student_capacity CHECK (current_students <= max_students)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '教师授课表-记录教师授课安排';

    -- 学生选课表
    CREATE TABLE course_selections (
        selection_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '选课ID（主键）',
        student_id INT NOT NULL COMMENT '学生ID（外键）',
        assignment_id INT NOT NULL COMMENT '授课ID（外键）',
        selection_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '选课时间',
        status ENUM('SELECTED', 'DROPPED', 'COMPLETED') DEFAULT 'SELECTED' COMMENT '选课状态',
        dropped_time TIMESTAMP NULL COMMENT '退课时间',
        completed_time TIMESTAMP NULL COMMENT '完成时间',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (student_id) REFERENCES students(student_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (assignment_id) REFERENCES teaching_assignments(assignment_id) ON DELETE CASCADE ON UPDATE CASCADE,
        UNIQUE KEY uk_student_assignment_active (student_id, assignment_id, status),
        INDEX idx_student_id (student_id),
        INDEX idx_assignment_id (assignment_id),
        INDEX idx_status (status),
        INDEX idx_selection_time (selection_time),
        CONSTRAINT chk_status_flow CHECK (
            (status = 'SELECTED' AND dropped_time IS NULL AND completed_time IS NULL) OR
            (status = 'DROPPED' AND dropped_time IS NOT NULL) OR
            (status = 'COMPLETED' AND completed_time IS NOT NULL)
        )
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '学生选课表-记录学生选课信息';

    -- 成绩表
    CREATE TABLE course_grades (
        grade_id INT PRIMARY KEY AUTO_INCREMENT COMMENT '成绩ID（主键）',
        student_id INT NOT NULL COMMENT '学生ID（外键）',
        assignment_id INT NOT NULL COMMENT '授课ID（外键）',
        usual_score DECIMAL(5,2) COMMENT '平时成绩（0-100）',
        final_grade DECIMAL(5,2) COMMENT '期末成绩（0-100）',
        total_grade DECIMAL(5,2) GENERATED ALWAYS AS (
            CASE 
                WHEN usual_score IS NULL AND final_grade IS NULL THEN NULL
                ELSE COALESCE(usual_score * 0.3, 0) + COALESCE(final_grade * 0.7, 0)
            END
        ) STORED COMMENT '总评成绩（计算列）',
        gpa_grade DECIMAL(3,2) COMMENT '绩点（0-4.0）',
        review_status_id INT NOT NULL DEFAULT 1 COMMENT '审核状态（外键）',
        review_time TIMESTAMP NULL COMMENT '审核时间',
        reviewer_id INT COMMENT '审核人ID（外键）',
        review_comment TEXT COMMENT '审核意见',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        FOREIGN KEY (student_id) REFERENCES students(student_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (assignment_id) REFERENCES teaching_assignments(assignment_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (review_status_id) REFERENCES grade_review_statuses(status_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (reviewer_id) REFERENCES users(user_id) ON DELETE SET NULL ON UPDATE CASCADE,
        UNIQUE KEY uk_student_assignment_grade (student_id, assignment_id),
        INDEX idx_student_grade (student_id),
        INDEX idx_assignment_grade (assignment_id),
        INDEX idx_review_status (review_status_id),
        INDEX idx_grades_student_semester (student_id, assignment_id),
        CONSTRAINT chk_usual_score_range CHECK (usual_score IS NULL OR (usual_score >= 0 AND usual_score <= 100)),
        CONSTRAINT chk_final_grade_range CHECK (final_grade IS NULL OR (final_grade >= 0 AND final_grade <= 100)),
        CONSTRAINT chk_gpa_grade_range CHECK (gpa_grade IS NULL OR (gpa_grade >= 0 AND gpa_grade <= 4.0))
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT = '成绩表-记录学生课程成绩';

    -- 最后重新开启外键检查
    SET FOREIGN_KEY_CHECKS = 1;