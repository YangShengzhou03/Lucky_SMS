name: 自动部署服务到k8s
on:
  push:
    branches: [ master ]  # 注意：你的触发分支是master，保持与本地推送分支一致

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      # 步骤1：登录镜像仓库
      - name: 登录镜像仓库
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      # 新增：后端编译打包（在构建镜像前执行，生成JAR包）
      - name: 配置Java环境（用于Maven编译）
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # 必须与你的Spring Boot项目使用的Java版本一致（如11、17）
          distribution: 'temurin'  # 推荐的Java发行版，兼容Maven
          cache: maven  # 缓存Maven依赖，加速后续构建

      - name: 用Maven编译后端代码生成JAR包
        run: mvn clean package -DskipTests  # 执行打包命令（跳过测试节省时间）
        working-directory: ./backend  # 指定后端代码目录（含pom.xml的位置）

      # 步骤2：构建并推送后端镜像（此时target目录已生成JAR包）
      - name: 构建后端镜像
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY_USER }}/lucky-sms-backend:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY_USER }}/lucky-sms-backend:latest

      # 步骤3：构建并推送前端镜像（若前端需要编译，也可类似添加npm步骤，这里假设Dockerfile已处理）
      - name: 构建前端镜像
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY_USER }}/lucky-sms-frontend:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY_USER }}/lucky-sms-frontend:latest

      # 步骤4：配置kubectl
      - name: 配置kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl get nodes

      # 步骤5：部署MySQL相关资源
      - name: 部署MySQL依赖
        run: |
          kubectl apply -f k8s/mysql-init-configmap.yaml
          kubectl apply -f k8s/mysql.yaml

      # 步骤6：更新后端部署
      - name: 部署后端
        run: |
          kubectl set image deployment/backend backend=${{ secrets.DOCKER_REGISTRY_USER }}/lucky-sms-backend:${{ github.sha }}
          kubectl rollout status deployment/backend

      # 步骤7：更新前端部署
      - name: 部署前端
        run: |
          kubectl set image deployment/frontend frontend=${{ secrets.DOCKER_REGISTRY_USER }}/lucky-sms-frontend:${{ github.sha }}
          kubectl rollout status deployment/frontend